习题十
一、问答题
1．	如果准备按字节读取一个文件的内容，应当使用FileInputStream流还是FileReader流?
2．	FileInputStream流的read方法和FileReader流的read方法有何不同？
3．	BufferedReader流能直接指向一个文件吗？
4．	使用ObjectInputStream和ObjectOutputStream类有哪些注意事项？
5．	怎样使用输入、输出流克隆对象？
二、选择题
1．下列哪个叙述是正确的？
A．创建File对象可能发生异常。
B．BufferedRead流可以指向FileInputStream流。
C．BufferedWrite流可以指向FileWrite流。
D．RandomAccessFile流一旦指向文件，就会刷新该文件。
2．为了向文件hello.txt尾加数据，下列哪个是正确创建指向hello.txt的流？
A．try {  OutputStream out = new FileOutputStream ("hello.txt");
         }
         catch(IOException e){} 

B．try {  OutputStream out = new FileOutputStream ("hello.txt",true);
         }
    catch(IOException e){}
C．try {  OutputStream out = new FileOutputStream ("hello.txt",false);
         }
    catch(IOException e){}
D．try {  OutputStream out = new OutputStream ("hello.txt",true);
         }
    catch(IOException e){}
三、阅读程序
1．文件E.java的长度是51个字节，请说出E类中标注的【代码1】，【代码2】的输出结果。
import java.io.*;
public class E {
   public static void main(String args[]) {
      File f = new File("E.java");
      try{  RandomAccessFile in = new RandomAccessFile(f,"rw");
           System.out.println(f.length());   //【代码1】
           FileOutputStream out = new FileOutputStream(f);
           System.out.println(f.length());  //【代码2】
      }
      catch(IOException e) {
           System.out.println("File read Error"+e);
      }
   }
}
2．请说出E类中标注的【代码1】~【代码4】的输出结果。
import java.io.*;
public class E {
   public static void main(String args[]) {
      int n=-1;
      File f =new File("hello.txt");
      byte [] a="abcd".getBytes();
      try{ FileOutputStream out=new FileOutputStream(f);
          out.write(a);
          out.close(); 
          FileInputStream in=new FileInputStream(f);
          byte [] tom= new byte[3];
          int m = in.read(tom,0,3);
          System.out.println(m);       //【代码1】
          String s=new String(tom,0,3);
          System.out.println(s);        //【代码2】
          m = in.read(tom,0,3);
          System.out.println(m);       //【代码3】
          s=new String(tom,0,3);
          System.out.println(s);        //【代码4】
      }
      catch(IOException e) {}
   }
}
3．了解打印流。我们已经学习了数据流，其特点是用Java的数据类型读写文件，但使用数据流写成的文件用其它文件阅读器无法进行阅读（看上去是乱码）。PrintStream类提供了一个过滤输出流，该输出流能以文本格式显示Java的数据类型。上机实习下列程序：
import java.io.*;
public class E {
   public static void main(String args[]) {
      try{  File file=new File("p.txt");
          FileOutputStream out=new FileOutputStream(file);
          PrintStream ps=new PrintStream(out);
          ps.print(12345.6789); 
          ps.println("how are you"); 
          ps.println(true);     
          ps.close();
      }
      catch(IOException e){}
   }
}
四、编写程序
1．使用RandomAccessFile流将一个文本文件倒置读出。
2．使用Java的输入、输出流将一个文本文件的内容按行读出，每读出一行就顺序添加行号，并写入到另一个文件中。
3．参考例子16，解析一个文件中的价格数据，并计算平均价格，比如该文件的内容如下：
商品列表：
电视机,2567元/台
洗衣机,3562元/台
冰箱,6573元/台
